<%= javascript_include_tag "camera" %>

<div>
    <video id="live" width="320" height="240" autoplay style="display: none;"></video>
    <canvas width="320" id="canvas" height="240" style="display: inline;"></canvas>
    <canvas width="320" id="diff_canvas" height="240" style="display: inline;"></canvas>

    <div id = "bar_container" style = "width: 320px; position: relative; bottom: 0px;"> 
        <div id = "activ_bar" style = "width: 100px; background-color: #fa0; height: 20px">
        </div>
    </div>

    <div id="threshold" style="width: 300px; margin: 5px;"></div>       
    
    <div id = "alert" style = "width: 100%; height: 20px; background: #f00; display: none"></div>

    <script>
    
    var thresholdVal = 30;
    var activityThreshold = 30;

    function setThreshold() {
        thresholdVal = $("#threshold").slider("value");       
    }
        
     $( "#threshold" ).slider({
        value: thresholdVal,
        orientation: "horizontal",
        max: 150,
        range: "min",
        animate: true,
        slide: setThreshold,
        change: setThreshold        
     });
      </script>
</div>
 
 <script type="text/javascript">
    var video = $("#live").get()[0];
    var canvas = $("#canvas");
    var diffCanvas = $("#diff_canvas");
    
    var ctx = canvas.get()[0].getContext('2d');
    var diffImageCtx = diffCanvas.get()[0].getContext('2d');

    var pixArray = [];

    var pixFlow = 0;

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    window.navigator.webkitGetUserMedia( {video:true},
            function(stream) {
                video.src = webkitURL.createObjectURL(stream);
            },
            function(err) {
                console.log("Unable to get video stream!")
            }
    )
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    function activityAlert( activity ) {
        if (activity > activityThreshold) {
            $("#alert").show();
        }
        else {
            $("#alert").hide();
        }
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    var timer = setInterval(
            function () {
            
                var prevFrame = ctx.getImageData(0,0, 320,240);
                ctx.drawImage(video, 0, 0, 320, 240);
                var currFrame = ctx.getImageData(0,0, 320,240);

                var grayScaleFrame = toGrayscale(currFrame);
                var diffImage = imgDiff(prevFrame, currFrame);
                var diffMask = threshold(diffImage, thresholdVal);
                var erodeMask = erode(diffMask, 1);

                ctx.putImageData(grayScaleFrame, 0,0);
                diffImageCtx.putImageData(erodeMask, 0,0);

                var activity = countPixels(erodeMask);

                pixFlow = pixFlow + ( activity - pixFlow )/3.0;
                var c = pixFlow/(32.0*24.0);
                activityAlert(pixFlow);
                
                c = c + "%";
                $("#activ_bar").css("width", c);
            }, 
    50);
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    var imgDiff = function (img_1, img_2) {
        var pix_1 = img_1.data;
        var pix_2 = img_2.data;

        var diff = img_1;
        var diffPix = diff.data;

        var n = pix_1.length;

        for (var i = 0; i < n; i+=4) {
            var d = Math.abs( pix_1[i] - pix_2[i] );
            diffPix[i] = diffPix[i+1] = diffPix[i+2] = d;
            diffPix[i+3] = 255;
        }
    
        return diff;    
    }
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    var threshold = function( img, val ) {
        var pix = img.data;
        var n = pix.length;

        for (var i = 0; i < n; i+=4) {
            if (pix[i] > val) {
                pix[i] = pix[i+1] = pix[i+2] = 255;
            }
            else {
                pix[i] = pix[i+1] = pix[i+2] = 0;
            }
        }

        return img;
    }
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    var countPixels = function( img ) {

        var pix = img.data;
        var n = pix.length;
        var count = 0;

        for (var i = 0; i < n; i+=4) {
            if (pix[i] > 0) {
                count++;
            }
        }

        return count;
    }
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    var erode = function( img, ker ) {
        var pix = img.data;
        var tmp = new Uint8ClampedArray(pix);
        tmp.set(pix);

        var w = img.width;
        var h = img.height;

        for (var i = 0; i < w; i++) {
            for (var j = 0; j < h; j++) {
                
                var min = 255;
                for (k = Math.max(i-ker,0); k < Math.min(i+ker,w); k++) {
                    for (l = Math.max(j-ker,0); l < Math.min(j+ker,h); l++) {
                        if (tmp[ 4*(l*w + k) ] == 0) {
                           min = 0;
                        }
                    }
                }
                
                pix[ 4*(j*w + i) ] = pix[ 4*(j*w + i) + 1 ] = pix[ 4*(j*w + i) + 2] = min;
            }
        }

        return img;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    var frameDiff = function( context, diffContext ) {

        var img = context.getImageData(0,0,320,240);
        var diffImg = diffContext.getImageData(0,0,320,240);
       
        var pix = img.data;
        var diffPix = diffImg.data;
        
        var n = pix.length;

        if ( pix[0] == -1 ) { 
            console.log("empty canvas");
            return;
        }
        else if ( pixArray[0] == -1) {
            console.log("empty pix array");
        }
        
        for (var i = 0; i < n; i+=4) {
            diffPix[i] = Math.abs( pix[i] - pixArray[i] ) > 30 ? 255 : 0;
            diffPix[i+1] = Math.abs( pix[i+1] - pixArray[i+1] ) > 30 ? 255 : 0;
            diffPix[i+2] = Math.abs( pix[i+2] - pixArray[i+2] ) > 30 ? 255 : 0;
            diffPix[i+3] = 255;
            
            pixArray[i] = pix[i];
            pixArray[i+1] = pix[i+1];
            pixArray[i+2] = pix[i+2];
        }
    
        diffContext.putImageData(diffImg, 0, 0);
    }
    
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    var toGrayscale = function( img ) {

        var pix = img.data;
        var n = pix.length;

        for (var i = 0; i < n; i+=4) {
            red = pix[i  ];
            green = pix[i+1];
            blue = pix[i+2]; 

            gray = 0.299*red + 0.587*green + 0.114*blue; // YUV model luma component
            pix[i] = pix[i+1] = pix[i+2] = gray;
        }

        return img;
    }
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


    

</script>

